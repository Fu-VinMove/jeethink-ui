{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/menu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/menu/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listMenu, getMenu, delMenu, addMenu, updateMenu } from \"@/api/system/menu\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport IconSelect from \"@/components/IconSelect\";\nexport default {\n  name: \"Menu\",\n  components: {\n    Treeselect: Treeselect,\n    IconSelect: IconSelect\n  },\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 菜单表格树数据\n      menuList: [],\n      // 菜单树选项\n      menuOptions: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 显示状态数据字典\n      visibleOptions: [],\n      // 菜单状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        menuName: undefined,\n        visible: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        menuName: [{\n          required: true,\n          message: \"菜单名称不能为空\",\n          trigger: \"blur\"\n        }],\n        orderNum: [{\n          required: true,\n          message: \"菜单顺序不能为空\",\n          trigger: \"blur\"\n        }],\n        path: [{\n          required: true,\n          message: \"路由地址不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    this.getDicts(\"sys_show_hide\").then(function (response) {\n      _this.visibleOptions = response.data;\n    });\n    this.getDicts(\"sys_normal_disable\").then(function (response) {\n      _this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    // 选择图标\n    selected: function selected(name) {\n      this.form.icon = name;\n    },\n\n    /** 查询菜单列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      listMenu(this.queryParams).then(function (response) {\n        _this2.menuList = _this2.handleTree(response.data, \"menuId\");\n        _this2.loading = false;\n      });\n    },\n\n    /** 转换菜单数据结构 */\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.menuId,\n        label: node.menuName,\n        children: node.children\n      };\n    },\n\n    /** 查询菜单下拉树结构 */\n    getTreeselect: function getTreeselect() {\n      var _this3 = this;\n\n      listMenu().then(function (response) {\n        _this3.menuOptions = [];\n        var menu = {\n          menuId: 0,\n          menuName: '主类目',\n          children: []\n        };\n        menu.children = _this3.handleTree(response.data, \"menuId\");\n\n        _this3.menuOptions.push(menu);\n      });\n    },\n    // 显示状态字典翻译\n    visibleFormat: function visibleFormat(row, column) {\n      if (row.menuType == \"F\") {\n        return \"\";\n      }\n\n      return this.selectDictLabel(this.visibleOptions, row.visible);\n    },\n    // 菜单状态字典翻译\n    statusFormat: function statusFormat(row, column) {\n      if (row.menuType == \"F\") {\n        return \"\";\n      }\n\n      return this.selectDictLabel(this.statusOptions, row.status);\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        menuId: undefined,\n        parentId: 0,\n        menuName: undefined,\n        icon: undefined,\n        menuType: \"M\",\n        orderNum: undefined,\n        isFrame: \"1\",\n        visible: \"0\",\n        status: \"0\"\n      };\n      this.resetForm(\"form\");\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd(row) {\n      this.reset();\n      this.getTreeselect();\n\n      if (row != null) {\n        this.form.parentId = row.menuId;\n      }\n\n      this.open = true;\n      this.title = \"添加菜单\";\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.reset();\n      this.getTreeselect();\n      getMenu(row.menuId).then(function (response) {\n        _this4.form = response.data;\n        _this4.open = true;\n        _this4.title = \"修改菜单\";\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this5 = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          if (_this5.form.menuId != undefined) {\n            updateMenu(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess(\"修改成功\");\n\n                _this5.open = false;\n\n                _this5.getList();\n              }\n            });\n          } else {\n            addMenu(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess(\"新增成功\");\n\n                _this5.open = false;\n\n                _this5.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.menuName + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return delMenu(row.menuId);\n      }).then(function () {\n        _this6.getList();\n\n        _this6.msgSuccess(\"删除成功\");\n      }).catch(function () {});\n    }\n  }\n};",null]}