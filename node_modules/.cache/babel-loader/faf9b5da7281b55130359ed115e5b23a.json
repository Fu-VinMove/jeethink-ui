{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/user/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listUser, getUser, delUser, addUser, updateUser, exportUser, resetUserPwd, changeUserStatus, importTemplate as _importTemplate } from \"@/api/system/user\";\nimport { getToken } from \"@/utils/auth\";\nimport { treeselect } from \"@/api/system/dept\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nexport default {\n  name: \"User\",\n  components: {\n    Treeselect: Treeselect\n  },\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 用户表格数据\n      userList: null,\n      // 弹出层标题\n      title: \"\",\n      // 部门树选项\n      deptOptions: undefined,\n      // 是否显示弹出层\n      open: false,\n      // 部门名称\n      deptName: undefined,\n      // 默认密码\n      initPassword: undefined,\n      // 日期范围\n      dateRange: [],\n      // 状态数据字典\n      statusOptions: [],\n      // 性别状态字典\n      sexOptions: [],\n      // 岗位选项\n      postOptions: [],\n      // 角色选项\n      roleOptions: [],\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 用户导入参数\n      upload: {\n        // 是否显示弹出层（用户导入）\n        open: false,\n        // 弹出层标题（用户导入）\n        title: \"\",\n        // 是否禁用上传\n        isUploading: false,\n        // 是否更新已经存在的用户数据\n        updateSupport: 0,\n        // 设置上传的请求头部\n        headers: {\n          Authorization: \"Bearer \" + getToken()\n        },\n        // 上传的地址\n        url: process.env.VUE_APP_BASE_API + \"/system/user/importData\"\n      },\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        userName: undefined,\n        phonenumber: undefined,\n        status: undefined,\n        deptId: undefined\n      },\n      // 表单校验\n      rules: {\n        userName: [{\n          required: true,\n          message: \"用户名称不能为空\",\n          trigger: \"blur\"\n        }],\n        nickName: [{\n          required: true,\n          message: \"用户昵称不能为空\",\n          trigger: \"blur\"\n        }],\n        deptId: [{\n          required: true,\n          message: \"归属部门不能为空\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"用户密码不能为空\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"邮箱地址不能为空\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"'请输入正确的邮箱地址\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        phonenumber: [{\n          required: true,\n          message: \"手机号码不能为空\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"请输入正确的手机号码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  watch: {\n    // 根据名称筛选部门树\n    deptName: function deptName(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    this.getTreeselect();\n    this.getDicts(\"sys_normal_disable\").then(function (response) {\n      _this.statusOptions = response.data;\n    });\n    this.getDicts(\"sys_user_sex\").then(function (response) {\n      _this.sexOptions = response.data;\n    });\n    this.getConfigKey(\"sys.user.initPassword\").then(function (response) {\n      _this.initPassword = response.msg;\n    });\n  },\n  methods: {\n    /** 查询用户列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(function (response) {\n        _this2.userList = response.rows;\n        _this2.total = response.total;\n        _this2.loading = false;\n      });\n    },\n\n    /** 查询部门下拉树结构 */\n    getTreeselect: function getTreeselect() {\n      var _this3 = this;\n\n      treeselect().then(function (response) {\n        _this3.deptOptions = response.data;\n      });\n    },\n    // 筛选节点\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    // 节点单击事件\n    handleNodeClick: function handleNodeClick(data) {\n      this.queryParams.deptId = data.id;\n      this.getList();\n    },\n    // 用户状态修改\n    handleStatusChange: function handleStatusChange(row) {\n      var _this4 = this;\n\n      var text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$confirm('确认要\"' + text + '\"\"' + row.userName + '\"用户吗?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return changeUserStatus(row.userId, row.status);\n      }).then(function () {\n        _this4.msgSuccess(text + \"成功\");\n      }).catch(function () {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        userId: undefined,\n        deptId: undefined,\n        userName: undefined,\n        nickName: undefined,\n        password: undefined,\n        phonenumber: undefined,\n        email: undefined,\n        sex: undefined,\n        status: \"0\",\n        remark: undefined,\n        postIds: [],\n        roleIds: []\n      };\n      this.resetForm(\"form\");\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.page = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.userId;\n      });\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      var _this5 = this;\n\n      this.reset();\n      this.getTreeselect();\n      getUser().then(function (response) {\n        _this5.postOptions = response.posts;\n        _this5.roleOptions = response.roles;\n        _this5.open = true;\n        _this5.title = \"添加用户\";\n        _this5.form.password = _this5.initPassword;\n      });\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this6 = this;\n\n      this.reset();\n      this.getTreeselect();\n      var userId = row.userId || this.ids;\n      getUser(userId).then(function (response) {\n        _this6.form = response.data;\n        _this6.postOptions = response.posts;\n        _this6.roleOptions = response.roles;\n        _this6.form.postIds = response.postIds;\n        _this6.form.roleIds = response.roleIds;\n        _this6.open = true;\n        _this6.title = \"修改用户\";\n        _this6.form.password = \"\";\n      });\n    },\n\n    /** 重置密码按钮操作 */\n    handleResetPwd: function handleResetPwd(row) {\n      var _this7 = this;\n\n      this.$prompt('请输入\"' + row.userName + '\"的新密码', \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      }).then(function (_ref) {\n        var value = _ref.value;\n        resetUserPwd(row.userId, value).then(function (response) {\n          if (response.code === 200) {\n            _this7.msgSuccess(\"修改成功，新密码是：\" + value);\n          }\n        });\n      }).catch(function () {});\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this8 = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          if (_this8.form.userId != undefined) {\n            updateUser(_this8.form).then(function (response) {\n              if (response.code === 200) {\n                _this8.msgSuccess(\"修改成功\");\n\n                _this8.open = false;\n\n                _this8.getList();\n              }\n            });\n          } else {\n            addUser(_this8.form).then(function (response) {\n              if (response.code === 200) {\n                _this8.msgSuccess(\"新增成功\");\n\n                _this8.open = false;\n\n                _this8.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this9 = this;\n\n      var userIds = row.userId || this.ids;\n      this.$confirm('是否确认删除用户编号为\"' + userIds + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return delUser(userIds);\n      }).then(function () {\n        _this9.getList();\n\n        _this9.msgSuccess(\"删除成功\");\n      }).catch(function () {});\n    },\n\n    /** 导出按钮操作 */\n    handleExport: function handleExport() {\n      var _this10 = this;\n\n      var queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有用户数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return exportUser(queryParams);\n      }).then(function (response) {\n        _this10.download(response.msg);\n      }).catch(function () {});\n    },\n\n    /** 导入按钮操作 */\n    handleImport: function handleImport() {\n      this.upload.title = \"用户导入\";\n      this.upload.open = true;\n    },\n\n    /** 下载模板操作 */\n    importTemplate: function importTemplate() {\n      var _this11 = this;\n\n      _importTemplate().then(function (response) {\n        _this11.download(response.msg);\n      });\n    },\n    // 文件上传中处理\n    handleFileUploadProgress: function handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    // 文件上传成功处理\n    handleFileSuccess: function handleFileSuccess(response, file, fileList) {\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      this.$alert(response.msg, \"导入结果\", {\n        dangerouslyUseHTMLString: true\n      });\n      this.getList();\n    },\n    // 提交上传文件\n    submitFileForm: function submitFileForm() {\n      this.$refs.upload.submit();\n    }\n  }\n};",null]}