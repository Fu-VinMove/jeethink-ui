{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/dept/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/dept/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listDept, getDept, delDept, addDept, updateDept, listDeptExcludeChild } from \"@/api/system/dept\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nexport default {\n  name: \"Dept\",\n  components: {\n    Treeselect: Treeselect\n  },\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 表格树数据\n      deptList: [],\n      // 部门树选项\n      deptOptions: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        deptName: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        parentId: [{\n          required: true,\n          message: \"上级部门不能为空\",\n          trigger: \"blur\"\n        }],\n        deptName: [{\n          required: true,\n          message: \"部门名称不能为空\",\n          trigger: \"blur\"\n        }],\n        orderNum: [{\n          required: true,\n          message: \"菜单顺序不能为空\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          type: \"email\",\n          message: \"'请输入正确的邮箱地址\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        phone: [{\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"请输入正确的手机号码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    this.getDicts(\"sys_normal_disable\").then(function (response) {\n      _this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    /** 查询部门列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      listDept(this.queryParams).then(function (response) {\n        _this2.deptList = _this2.handleTree(response.data, \"deptId\");\n        _this2.loading = false;\n      });\n    },\n\n    /** 转换部门数据结构 */\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.deptId,\n        label: node.deptName,\n        children: node.children\n      };\n    },\n    // 字典状态字典翻译\n    statusFormat: function statusFormat(row, column) {\n      return this.selectDictLabel(this.statusOptions, row.status);\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        deptId: undefined,\n        parentId: undefined,\n        deptName: undefined,\n        orderNum: undefined,\n        leader: undefined,\n        phone: undefined,\n        email: undefined,\n        status: \"0\"\n      };\n      this.resetForm(\"form\");\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd(row) {\n      var _this3 = this;\n\n      this.reset();\n\n      if (row != undefined) {\n        this.form.parentId = row.deptId;\n      }\n\n      this.open = true;\n      this.title = \"添加部门\";\n      listDept().then(function (response) {\n        _this3.deptOptions = _this3.handleTree(response.data, \"deptId\");\n      });\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.reset();\n      getDept(row.deptId).then(function (response) {\n        _this4.form = response.data;\n        _this4.open = true;\n        _this4.title = \"修改部门\";\n      });\n      listDeptExcludeChild(row.deptId).then(function (response) {\n        _this4.deptOptions = _this4.handleTree(response.data, \"deptId\");\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this5 = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          if (_this5.form.deptId != undefined) {\n            updateDept(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess(\"修改成功\");\n\n                _this5.open = false;\n\n                _this5.getList();\n              }\n            });\n          } else {\n            addDept(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess(\"新增成功\");\n\n                _this5.open = false;\n\n                _this5.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.deptName + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return delDept(row.deptId);\n      }).then(function () {\n        _this6.getList();\n\n        _this6.msgSuccess(\"删除成功\");\n      }).catch(function () {});\n    }\n  }\n};",null]}