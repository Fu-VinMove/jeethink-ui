{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/tool/build/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/tool/build/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _typeof from \"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { saveAs } from 'file-saver';\nimport beautifier from 'js-beautify';\nimport ClipboardJS from 'clipboard';\nimport render from '@/utils/generator/render';\nimport RightPanel from \"./RightPanel\";\nimport { inputComponents, selectComponents, layoutComponents, formConf } from '@/utils/generator/config';\nimport { exportDefault, beautifierConf, isNumberStr, titleCase } from '@/utils/index';\nimport { makeUpHtml, vueTemplate, vueScript, cssStyle } from '@/utils/generator/html';\nimport { makeUpJs } from '@/utils/generator/js';\nimport { makeUpCss } from '@/utils/generator/css';\nimport drawingDefalut from '@/utils/generator/drawingDefalut';\nimport logo from '@/assets/logo/logo.png';\nimport CodeTypeDialog from \"./CodeTypeDialog\";\nimport DraggableItem from \"./DraggableItem\";\nvar emptyActiveData = {\n  style: {},\n  autosize: {}\n};\nvar oldActiveId;\nvar tempActiveData;\nexport default {\n  components: {\n    draggable: draggable,\n    render: render,\n    RightPanel: RightPanel,\n    CodeTypeDialog: CodeTypeDialog,\n    DraggableItem: DraggableItem\n  },\n  data: function data() {\n    return {\n      logo: logo,\n      idGlobal: 100,\n      formConf: formConf,\n      inputComponents: inputComponents,\n      selectComponents: selectComponents,\n      layoutComponents: layoutComponents,\n      labelWidth: 100,\n      drawingList: drawingDefalut,\n      drawingData: {},\n      activeId: drawingDefalut[0].formId,\n      drawerVisible: false,\n      formData: {},\n      dialogVisible: false,\n      generateConf: null,\n      showFileName: false,\n      activeData: drawingDefalut[0]\n    };\n  },\n  computed: {},\n  watch: {\n    // eslint-disable-next-line func-names\n    'activeData.label': function activeDataLabel(val, oldVal) {\n      if (this.activeData.placeholder === undefined || !this.activeData.tag || oldActiveId !== this.activeId) {\n        return;\n      }\n\n      this.activeData.placeholder = this.activeData.placeholder.replace(oldVal, '') + val;\n    },\n    activeId: {\n      handler: function handler(val) {\n        oldActiveId = val;\n      },\n      immediate: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var clipboard = new ClipboardJS('#copyNode', {\n      text: function text(trigger) {\n        var codeStr = _this.generateCode();\n\n        _this.$notify({\n          title: '成功',\n          message: '代码已复制到剪切板，可粘贴。',\n          type: 'success'\n        });\n\n        return codeStr;\n      }\n    });\n    clipboard.on('error', function (e) {\n      _this.$message.error('代码复制失败');\n    });\n  },\n  methods: {\n    activeFormItem: function activeFormItem(element) {\n      this.activeData = element;\n      this.activeId = element.formId;\n    },\n    onEnd: function onEnd(obj, a) {\n      if (obj.from !== obj.to) {\n        this.activeData = tempActiveData;\n        this.activeId = this.idGlobal;\n      }\n    },\n    addComponent: function addComponent(item) {\n      var clone = this.cloneComponent(item);\n      this.drawingList.push(clone);\n      this.activeFormItem(clone);\n    },\n    cloneComponent: function cloneComponent(origin) {\n      var clone = JSON.parse(JSON.stringify(origin));\n      clone.formId = ++this.idGlobal;\n      clone.span = formConf.span;\n      clone.renderKey = +new Date(); // 改变renderKey后可以实现强制更新组件\n\n      if (!clone.layout) clone.layout = 'colFormItem';\n\n      if (clone.layout === 'colFormItem') {\n        clone.vModel = \"field\".concat(this.idGlobal);\n        clone.placeholder !== undefined && (clone.placeholder += clone.label);\n        tempActiveData = clone;\n      } else if (clone.layout === 'rowFormItem') {\n        delete clone.label;\n        clone.componentName = \"row\".concat(this.idGlobal);\n        clone.gutter = this.formConf.gutter;\n        tempActiveData = clone;\n      }\n\n      return tempActiveData;\n    },\n    AssembleFormData: function AssembleFormData() {\n      this.formData = _objectSpread({\n        fields: JSON.parse(JSON.stringify(this.drawingList))\n      }, this.formConf);\n    },\n    generate: function generate(data) {\n      var func = this[\"exec\".concat(titleCase(this.operationType))];\n      this.generateConf = data;\n      func && func(data);\n    },\n    execRun: function execRun(data) {\n      this.AssembleFormData();\n      this.drawerVisible = true;\n    },\n    execDownload: function execDownload(data) {\n      var codeStr = this.generateCode();\n      var blob = new Blob([codeStr], {\n        type: 'text/plain;charset=utf-8'\n      });\n      saveAs(blob, data.fileName);\n    },\n    execCopy: function execCopy(data) {\n      document.getElementById('copyNode').click();\n    },\n    empty: function empty() {\n      var _this2 = this;\n\n      this.$confirm('确定要清空所有组件吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.drawingList = [];\n      });\n    },\n    drawingItemCopy: function drawingItemCopy(item, parent) {\n      var clone = JSON.parse(JSON.stringify(item));\n      clone = this.createIdAndKey(clone);\n      parent.push(clone);\n      this.activeFormItem(clone);\n    },\n    createIdAndKey: function createIdAndKey(item) {\n      var _this3 = this;\n\n      item.formId = ++this.idGlobal;\n      item.renderKey = +new Date();\n\n      if (item.layout === 'colFormItem') {\n        item.vModel = \"field\".concat(this.idGlobal);\n      } else if (item.layout === 'rowFormItem') {\n        item.componentName = \"row\".concat(this.idGlobal);\n      }\n\n      if (Array.isArray(item.children)) {\n        item.children = item.children.map(function (childItem) {\n          return _this3.createIdAndKey(childItem);\n        });\n      }\n\n      return item;\n    },\n    drawingItemDelete: function drawingItemDelete(index, parent) {\n      var _this4 = this;\n\n      parent.splice(index, 1);\n      this.$nextTick(function () {\n        var len = _this4.drawingList.length;\n\n        if (len) {\n          _this4.activeFormItem(_this4.drawingList[len - 1]);\n        }\n      });\n    },\n    generateCode: function generateCode() {\n      var type = this.generateConf.type;\n      this.AssembleFormData();\n      var script = vueScript(makeUpJs(this.formData, type));\n      var html = vueTemplate(makeUpHtml(this.formData, type));\n      var css = cssStyle(makeUpCss(this.formData));\n      return beautifier.html(html + script + css, beautifierConf.html);\n    },\n    download: function download() {\n      this.dialogVisible = true;\n      this.showFileName = true;\n      this.operationType = 'download';\n    },\n    run: function run() {\n      this.dialogVisible = true;\n      this.showFileName = false;\n      this.operationType = 'run';\n    },\n    copy: function copy() {\n      this.dialogVisible = true;\n      this.showFileName = false;\n      this.operationType = 'copy';\n    },\n    tagChange: function tagChange(newTag) {\n      var _this5 = this;\n\n      newTag = this.cloneComponent(newTag);\n      newTag.vModel = this.activeData.vModel;\n      newTag.formId = this.activeId;\n      newTag.span = this.activeData.span;\n      delete this.activeData.tag;\n      delete this.activeData.tagIcon;\n      delete this.activeData.document;\n      Object.keys(newTag).forEach(function (key) {\n        if (_this5.activeData[key] !== undefined && _typeof(_this5.activeData[key]) === _typeof(newTag[key])) {\n          newTag[key] = _this5.activeData[key];\n        }\n      });\n      this.activeData = newTag;\n      this.updateDrawingList(newTag, this.drawingList);\n    },\n    updateDrawingList: function updateDrawingList(newTag, list) {\n      var _this6 = this;\n\n      var index = list.findIndex(function (item) {\n        return item.formId === _this6.activeId;\n      });\n\n      if (index > -1) {\n        list.splice(index, 1, newTag);\n      } else {\n        list.forEach(function (item) {\n          if (Array.isArray(item.children)) _this6.updateDrawingList(newTag, item.children);\n        });\n      }\n    }\n  }\n};",null]}