{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/dict/data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/dict/data.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listData, getData, delData, addData, updateData, exportData } from \"@/api/system/dict/data\";\nimport { listType, getType as _getType } from \"@/api/system/dict/type\";\nexport default {\n  name: \"Data\",\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 字典表格数据\n      dataList: [],\n      // 默认字典类型\n      defaultDictType: \"\",\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 类型数据字典\n      typeOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        dictName: undefined,\n        dictType: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        dictLabel: [{\n          required: true,\n          message: \"数据标签不能为空\",\n          trigger: \"blur\"\n        }],\n        dictValue: [{\n          required: true,\n          message: \"数据键值不能为空\",\n          trigger: \"blur\"\n        }],\n        dictSort: [{\n          required: true,\n          message: \"数据顺序不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var dictId = this.$route.params && this.$route.params.dictId;\n    this.getType(dictId);\n    this.getTypeList();\n    this.getDicts(\"sys_normal_disable\").then(function (response) {\n      _this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    /** 查询字典类型详细 */\n    getType: function getType(dictId) {\n      var _this2 = this;\n\n      _getType(dictId).then(function (response) {\n        _this2.queryParams.dictType = response.data.dictType;\n        _this2.defaultDictType = response.data.dictType;\n\n        _this2.getList();\n      });\n    },\n\n    /** 查询字典类型列表 */\n    getTypeList: function getTypeList() {\n      var _this3 = this;\n\n      listType().then(function (response) {\n        _this3.typeOptions = response.rows;\n      });\n    },\n\n    /** 查询字典数据列表 */\n    getList: function getList() {\n      var _this4 = this;\n\n      this.loading = true;\n      listData(this.queryParams).then(function (response) {\n        _this4.dataList = response.rows;\n        _this4.total = response.total;\n        _this4.loading = false;\n      });\n    },\n    // 数据状态字典翻译\n    statusFormat: function statusFormat(row, column) {\n      return this.selectDictLabel(this.statusOptions, row.status);\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        dictCode: undefined,\n        dictLabel: undefined,\n        dictValue: undefined,\n        dictSort: 0,\n        status: \"0\",\n        remark: undefined\n      };\n      this.resetForm(\"form\");\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.queryParams.dictType = this.defaultDictType;\n      this.handleQuery();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加字典数据\";\n      this.form.dictType = this.queryParams.dictType;\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.dictCode;\n      });\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this5 = this;\n\n      this.reset();\n      var dictCode = row.dictCode || this.ids;\n      getData(dictCode).then(function (response) {\n        _this5.form = response.data;\n        _this5.open = true;\n        _this5.title = \"修改字典数据\";\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this6 = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          if (_this6.form.dictCode != undefined) {\n            updateData(_this6.form).then(function (response) {\n              if (response.code === 200) {\n                _this6.msgSuccess(\"修改成功\");\n\n                _this6.open = false;\n\n                _this6.getList();\n              }\n            });\n          } else {\n            addData(_this6.form).then(function (response) {\n              if (response.code === 200) {\n                _this6.msgSuccess(\"新增成功\");\n\n                _this6.open = false;\n\n                _this6.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this7 = this;\n\n      var dictCodes = row.dictCode || this.ids;\n      this.$confirm('是否确认删除字典编码为\"' + dictCodes + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return delData(dictCodes);\n      }).then(function () {\n        _this7.getList();\n\n        _this7.msgSuccess(\"删除成功\");\n      }).catch(function () {});\n    },\n\n    /** 导出按钮操作 */\n    handleExport: function handleExport() {\n      var _this8 = this;\n\n      var queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return exportData(queryParams);\n      }).then(function (response) {\n        _this8.download(response.msg);\n      }).catch(function () {});\n    }\n  }\n};",null]}