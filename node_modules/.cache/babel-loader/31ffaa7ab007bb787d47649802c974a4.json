{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/components/Breadcrumb/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar _pathToRegexp = _interopRequireDefault(require(\"path-to-regexp\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      levelList: null\n    };\n  },\n  watch: {\n    $route: function $route(route) {\n      // if you go to the redirect page, do not update the breadcrumbs\n      if (route.path.startsWith('/redirect/')) {\n        return;\n      }\n\n      this.getBreadcrumb();\n    }\n  },\n  created: function created() {\n    this.getBreadcrumb();\n  },\n  methods: {\n    getBreadcrumb: function getBreadcrumb() {\n      // only show routes with meta.title\n      var matched = this.$route.matched.filter(function (item) {\n        return item.meta && item.meta.title;\n      });\n      var first = matched[0];\n\n      if (!this.isDashboard(first)) {\n        matched = [{\n          path: '/index',\n          meta: {\n            title: '首页'\n          }\n        }].concat(matched);\n      }\n\n      this.levelList = matched.filter(function (item) {\n        return item.meta && item.meta.title && item.meta.breadcrumb !== false;\n      });\n    },\n    isDashboard: function isDashboard(route) {\n      var name = route && route.name;\n\n      if (!name) {\n        return false;\n      }\n\n      return name.trim() === '首页';\n    },\n    pathCompile: function pathCompile(path) {\n      var params = this.$route.params;\n\n      var toPath = _pathToRegexp.default.compile(path);\n\n      return toPath(params);\n    },\n    handleLink: function handleLink(item) {\n      var redirect = item.redirect,\n          path = item.path;\n\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n\n      this.$router.push(this.pathCompile(path));\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAYA;;;;;;;;;;;;;eAEA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,YAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,aAAA;AACA;AAPA,GANA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,aAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA;AACA,UAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OAAA,CAAA;AACA,UAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,OAAA,GAAA,CAAA;AAAA,UAAA,IAAA,EAAA,QAAA;AAAA,UAAA,IAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA;AAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA;AACA;;AAEA,WAAA,SAAA,GAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,IAAA,IAAA,CAAA,IAAA,CAAA,UAAA,KAAA,KAAA;AAAA,OAAA,CAAA;AACA,KAXA;AAYA,IAAA,WAZA,uBAYA,KAZA,EAYA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,KAAA,CAAA,IAAA;;AACA,UAAA,CAAA,IAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,IAAA,CAAA,IAAA,OAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,WAnBA,uBAmBA,IAnBA,EAmBA;AAAA,UACA,MADA,GACA,KAAA,MADA,CACA,MADA;;AAEA,UAAA,MAAA,GAAA,sBAAA,OAAA,CAAA,IAAA,CAAA;;AACA,aAAA,MAAA,CAAA,MAAA,CAAA;AACA,KAvBA;AAwBA,IAAA,UAxBA,sBAwBA,IAxBA,EAwBA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;;AAEA,UAAA,QAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AACA;AA/BA;AAlBA,C","sourcesContent":["<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <transition-group name=\"breadcrumb\">\r\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\" class=\"no-redirect\">{{ item.meta.title }}</span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nimport pathToRegexp from 'path-to-regexp'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      levelList: null\r\n    }\r\n  },\r\n  watch: {\r\n    $route(route) {\r\n      // if you go to the redirect page, do not update the breadcrumbs\r\n      if (route.path.startsWith('/redirect/')) {\r\n        return\r\n      }\r\n      this.getBreadcrumb()\r\n    }\r\n  },\r\n  created() {\r\n    this.getBreadcrumb()\r\n  },\r\n  methods: {\r\n    getBreadcrumb() {\r\n      // only show routes with meta.title\r\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\r\n      const first = matched[0]\r\n\r\n      if (!this.isDashboard(first)) {\r\n        matched = [{ path: '/index', meta: { title: '首页' }}].concat(matched)\r\n      }\r\n\r\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\r\n    },\r\n    isDashboard(route) {\r\n      const name = route && route.name\r\n      if (!name) {\r\n        return false\r\n      }\r\n      return name.trim() === '首页'\r\n    },\r\n    pathCompile(path) {\r\n      const { params } = this.$route\r\n      var toPath = pathToRegexp.compile(path)\r\n      return toPath(params)\r\n    },\r\n    handleLink(item) {\r\n      const { redirect, path } = item\r\n      if (redirect) {\r\n        this.$router.push(redirect)\r\n        return\r\n      }\r\n      this.$router.push(this.pathCompile(path))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-breadcrumb.el-breadcrumb {\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  margin-left: 8px;\r\n\r\n  .no-redirect {\r\n    color: #97a8be;\r\n    cursor: text;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Breadcrumb"}]}