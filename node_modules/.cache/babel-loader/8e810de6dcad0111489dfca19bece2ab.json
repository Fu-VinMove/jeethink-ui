{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/monitor/job/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/monitor/job/index.vue","mtime":1591000996000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listJob, getJob, delJob, addJob, updateJob, exportJob, runJob, changeJobStatus } from \"@/api/monitor/job\";\nexport default {\n  name: \"Job\",\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 定时任务表格数据\n      jobList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 是否显示详细弹出层\n      openView: false,\n      // 任务组名字典\n      jobGroupOptions: [],\n      // 状态字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        jobName: undefined,\n        jobGroup: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        jobName: [{\n          required: true,\n          message: \"任务名称不能为空\",\n          trigger: \"blur\"\n        }],\n        invokeTarget: [{\n          required: true,\n          message: \"调用目标字符串不能为空\",\n          trigger: \"blur\"\n        }],\n        cronExpression: [{\n          required: true,\n          message: \"cron执行表达式不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    this.getDicts(\"sys_job_group\").then(function (response) {\n      _this.jobGroupOptions = response.data;\n    });\n    this.getDicts(\"sys_job_status\").then(function (response) {\n      _this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    /** 查询定时任务列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      listJob(this.queryParams).then(function (response) {\n        _this2.jobList = response.rows;\n        _this2.total = response.total;\n        _this2.loading = false;\n      });\n    },\n    // 任务组名字典翻译\n    jobGroupFormat: function jobGroupFormat(row, column) {\n      return this.selectDictLabel(this.jobGroupOptions, row.jobGroup);\n    },\n    // 状态字典翻译\n    statusFormat: function statusFormat(row, column) {\n      return this.selectDictLabel(this.statusOptions, row.status);\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        jobId: undefined,\n        jobName: undefined,\n        jobGroup: undefined,\n        invokeTarget: undefined,\n        cronExpression: undefined,\n        misfirePolicy: 1,\n        concurrent: 1,\n        status: \"0\"\n      };\n      this.resetForm(\"form\");\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.jobId;\n      });\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 任务状态修改\n    handleStatusChange: function handleStatusChange(row) {\n      var _this3 = this;\n\n      var text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$confirm('确认要\"' + text + '\"\"' + row.jobName + '\"任务吗?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return changeJobStatus(row.jobId, row.status);\n      }).then(function () {\n        _this3.msgSuccess(text + \"成功\");\n      }).catch(function () {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n\n    /* 立即执行一次 */\n    handleRun: function handleRun(row) {\n      var _this4 = this;\n\n      this.$confirm('确认要立即执行一次\"' + row.jobName + '\"任务吗?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return runJob(row.jobId, row.jobGroup);\n      }).then(function () {\n        _this4.msgSuccess(\"执行成功\");\n      }).catch(function () {});\n    },\n\n    /** 任务详细信息 */\n    handleView: function handleView(row) {\n      var _this5 = this;\n\n      getJob(row.jobId).then(function (response) {\n        _this5.form = response.data;\n        _this5.openView = true;\n      });\n    },\n\n    /** 任务日志列表查询 */\n    handleJobLog: function handleJobLog() {\n      this.$router.push(\"/job/log\");\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加任务\";\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this6 = this;\n\n      this.reset();\n      var jobId = row.jobId || this.ids;\n      getJob(jobId).then(function (response) {\n        _this6.form = response.data;\n        _this6.open = true;\n        _this6.title = \"修改任务\";\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this7 = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          if (_this7.form.jobId != undefined) {\n            updateJob(_this7.form).then(function (response) {\n              if (response.code === 200) {\n                _this7.msgSuccess(\"修改成功\");\n\n                _this7.open = false;\n\n                _this7.getList();\n              }\n            });\n          } else {\n            addJob(_this7.form).then(function (response) {\n              if (response.code === 200) {\n                _this7.msgSuccess(\"新增成功\");\n\n                _this7.open = false;\n\n                _this7.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this8 = this;\n\n      var jobIds = row.jobId || this.ids;\n      this.$confirm('是否确认删除定时任务编号为\"' + jobIds + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return delJob(jobIds);\n      }).then(function () {\n        _this8.getList();\n\n        _this8.msgSuccess(\"删除成功\");\n      }).catch(function () {});\n    },\n\n    /** 导出按钮操作 */\n    handleExport: function handleExport() {\n      var _this9 = this;\n\n      var queryParams = this.queryParams;\n      this.$confirm(\"是否确认导出所有定时任务数据项?\", \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return exportJob(queryParams);\n      }).then(function (response) {\n        _this9.download(response.msg);\n      }).catch(function () {});\n    }\n  }\n};",null]}