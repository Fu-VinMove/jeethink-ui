{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/utils/jeethink.js","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/utils/jeethink.js","mtime":1591000916000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTime = parseTime;\nexports.resetForm = resetForm;\nexports.addDateRange = addDateRange;\nexports.selectDictLabel = selectDictLabel;\nexports.download = download;\nexports.sprintf = sprintf;\nexports.praseStrEmpty = praseStrEmpty;\nexports.handleTree = handleTree;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _typeof2 = _interopRequireDefault(require(\"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime-corejs2/helpers/typeof\"));\n\n/**\r\n * 通用js方法封装处理\r\n * Copyright (c) 2019 jeethink\r\n */\nvar baseURL = process.env.VUE_APP_BASE_API; // 日期格式化\n\nfunction parseTime(time, pattern) {\n  if (arguments.length === 0 || !time) {\n    return null;\n  }\n\n  var format = pattern || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if ((0, _typeof2.default)(time) === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time);\n    } else if (typeof time === 'string') {\n      time = time.replace(new RegExp(/-/gm), '/');\n    }\n\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key]; // Note: getDay() returns 0 on Sunday\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n\n    return value || 0;\n  });\n  return time_str;\n} // 表单重置\n\n\nfunction resetForm(refName) {\n  if (this.$refs[refName]) {\n    this.$refs[refName].resetFields();\n  }\n} // 添加日期范围\n\n\nfunction addDateRange(params, dateRange) {\n  var search = params;\n  search.beginTime = \"\";\n  search.endTime = \"\";\n\n  if (null != dateRange && '' != dateRange) {\n    search.beginTime = this.dateRange[0];\n    search.endTime = this.dateRange[1];\n  }\n\n  return search;\n} // 回显数据字典\n\n\nfunction selectDictLabel(datas, value) {\n  var actions = [];\n  Object.keys(datas).map(function (key) {\n    if (datas[key].dictValue == '' + value) {\n      actions.push(datas[key].dictLabel);\n      return false;\n    }\n  });\n  return actions.join('');\n} // 通用下载方法\n\n\nfunction download(fileName) {\n  window.location.href = baseURL + \"/common/download?fileName=\" + encodeURI(fileName) + \"&delete=\" + true;\n} // 字符串格式化(%s )\n\n\nfunction sprintf(str) {\n  var args = arguments,\n      flag = true,\n      i = 1;\n  str = str.replace(/%s/g, function () {\n    var arg = args[i++];\n\n    if (typeof arg === 'undefined') {\n      flag = false;\n      return '';\n    }\n\n    return arg;\n  });\n  return flag ? str : '';\n} // 转换字符串，undefined,null等转化为\"\"\n\n\nfunction praseStrEmpty(str) {\n  if (!str || str == \"undefined\" || str == \"null\") {\n    return \"\";\n  }\n\n  return str;\n}\n/**\r\n * 构造树型结构数据\r\n * @param {*} data 数据源\r\n * @param {*} id id字段 默认 'id'\r\n * @param {*} parentId 父节点字段 默认 'parentId'\r\n * @param {*} children 孩子节点字段 默认 'children'\r\n * @param {*} rootId 根Id 默认 0\r\n */\n\n\nfunction handleTree(data, id, parentId, children, rootId) {\n  id = id || 'id';\n  parentId = parentId || 'parentId';\n  children = children || 'children';\n  rootId = rootId || 0; //对源数据深度克隆\n\n  var cloneData = JSON.parse(JSON.stringify(data)); //循环所有项\n\n  var treeData = cloneData.filter(function (father) {\n    var branchArr = cloneData.filter(function (child) {\n      //返回每一项的子级数组\n      return father[id] === child[parentId];\n    });\n    branchArr.length > 0 ? father.children = branchArr : ''; //返回第一层\n\n    return father[parentId] === rootId;\n  });\n  return treeData != '' ? treeData : data;\n}",{"version":3,"sources":["/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/utils/jeethink.js"],"names":["baseURL","process","env","VUE_APP_BASE_API","parseTime","time","pattern","arguments","length","format","date","test","parseInt","replace","RegExp","toString","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value","resetForm","refName","$refs","resetFields","addDateRange","params","dateRange","search","beginTime","endTime","selectDictLabel","datas","actions","Object","keys","map","dictValue","push","dictLabel","join","download","fileName","window","location","href","encodeURI","sprintf","str","args","flag","arg","praseStrEmpty","handleTree","data","id","parentId","children","rootId","cloneData","JSON","parse","stringify","treeData","filter","father","branchArr","child"],"mappings":"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","sourcesContent":["/**\r\n * 通用js方法封装处理\r\n * Copyright (c) 2019 jeethink\r\n */\r\n\r\nconst baseURL = process.env.VUE_APP_BASE_API\r\n\r\n// 日期格式化\r\nexport function parseTime(time, pattern) {\r\n\tif (arguments.length === 0 || !time) {\r\n\t\treturn null\r\n\t}\r\n\tconst format = pattern || '{y}-{m}-{d} {h}:{i}:{s}'\r\n\tlet date\r\n\tif (typeof time === 'object') {\r\n\t\tdate = time\r\n\t} else {\r\n\t\tif ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {\r\n\t\t\ttime = parseInt(time)\r\n\t\t} else if (typeof time === 'string') {\r\n\t\t\ttime = time.replace(new RegExp(/-/gm), '/');\r\n\t\t}\r\n\t\tif ((typeof time === 'number') && (time.toString().length === 10)) {\r\n\t\t\ttime = time * 1000\r\n\t\t}\r\n\t\tdate = new Date(time)\r\n\t}\r\n\tconst formatObj = {\r\n\t\ty: date.getFullYear(),\r\n\t\tm: date.getMonth() + 1,\r\n\t\td: date.getDate(),\r\n\t\th: date.getHours(),\r\n\t\ti: date.getMinutes(),\r\n\t\ts: date.getSeconds(),\r\n\t\ta: date.getDay()\r\n\t}\r\n\tconst time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n\t\tlet value = formatObj[key]\r\n\t\t// Note: getDay() returns 0 on Sunday\r\n\t\tif (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n\t\tif (result.length > 0 && value < 10) {\r\n\t\t\tvalue = '0' + value\r\n\t\t}\r\n\t\treturn value || 0\r\n\t})\r\n\treturn time_str\r\n}\r\n\r\n// 表单重置\r\nexport function resetForm(refName) {\r\n\tif (this.$refs[refName]) {\r\n\t\tthis.$refs[refName].resetFields();\r\n\t}\r\n}\r\n\r\n// 添加日期范围\r\nexport function addDateRange(params, dateRange) {\r\n\tvar search = params;\r\n\tsearch.beginTime = \"\";\r\n\tsearch.endTime = \"\";\r\n\tif (null != dateRange && '' != dateRange) {\r\n\t\tsearch.beginTime = this.dateRange[0];\r\n\t\tsearch.endTime = this.dateRange[1];\r\n\t}\r\n\treturn search;\r\n}\r\n\r\n// 回显数据字典\r\nexport function selectDictLabel(datas, value) {\r\n\tvar actions = [];\r\n\tObject.keys(datas).map((key) => {\r\n\t\tif (datas[key].dictValue == ('' + value)) {\r\n\t\t\tactions.push(datas[key].dictLabel);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t})\r\n\treturn actions.join('');\r\n}\r\n\r\n// 通用下载方法\r\nexport function download(fileName) {\r\n\twindow.location.href = baseURL + \"/common/download?fileName=\" + encodeURI(fileName) + \"&delete=\" + true;\r\n}\r\n\r\n// 字符串格式化(%s )\r\nexport function sprintf(str) {\r\n\tvar args = arguments, flag = true, i = 1;\r\n\tstr = str.replace(/%s/g, function () {\r\n\t\tvar arg = args[i++];\r\n\t\tif (typeof arg === 'undefined') {\r\n\t\t\tflag = false;\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn arg;\r\n\t});\r\n\treturn flag ? str : '';\r\n}\r\n\r\n// 转换字符串，undefined,null等转化为\"\"\r\nexport function praseStrEmpty(str) {\r\n    if (!str || str == \"undefined\" || str == \"null\") {\r\n        return \"\";\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * 构造树型结构数据\r\n * @param {*} data 数据源\r\n * @param {*} id id字段 默认 'id'\r\n * @param {*} parentId 父节点字段 默认 'parentId'\r\n * @param {*} children 孩子节点字段 默认 'children'\r\n * @param {*} rootId 根Id 默认 0\r\n */\r\nexport function handleTree(data, id, parentId, children, rootId) {\r\n\tid = id || 'id'\r\n\tparentId = parentId || 'parentId'\r\n\tchildren = children || 'children'\r\n\trootId = rootId || 0\r\n\t//对源数据深度克隆\r\n\tconst cloneData = JSON.parse(JSON.stringify(data))\r\n\t//循环所有项\r\n\tconst treeData =  cloneData.filter(father => {\r\n\t  let branchArr = cloneData.filter(child => {\r\n\t\t//返回每一项的子级数组\r\n\t\treturn father[id] === child[parentId]\r\n\t  });\r\n\t  branchArr.length > 0 ? father.children = branchArr : '';\r\n\t  //返回第一层\r\n\t  return father[parentId] === rootId;\r\n\t});\r\n\treturn treeData != '' ? treeData : data;\r\n  }\r\n  "]}]}