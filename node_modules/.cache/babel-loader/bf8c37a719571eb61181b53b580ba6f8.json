{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/store/modules/permission.js","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/store/modules/permission.js","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/fuwenmu/Downloads/jeethink\\u524D\\u540E\\u5206\\u79BB\\u5F00\\u53D1\\u6846\\u67B6/jeethink\\u5FEB\\u901F\\u5F00\\u53D1\\u6846\\u67B6\\uFF08\\u524D\\u540E\\u5206\\u79BB\\uFF09_V2.3/jeethink-ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.loadView = void 0;\n\nvar _router = require(\"@/router\");\n\nvar _menu = require(\"@/api/menu\");\n\nvar _index = _interopRequireDefault(require(\"@/layout/index\"));\n\nvar permission = {\n  state: {\n    routes: [],\n    addRoutes: []\n  },\n  mutations: {\n    SET_ROUTES: function SET_ROUTES(state, routes) {\n      state.addRoutes = routes;\n      state.routes = _router.constantRoutes.concat(routes);\n    }\n  },\n  actions: {\n    // 生成路由\n    GenerateRoutes: function GenerateRoutes(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        // 向后端请求路由数据\n        (0, _menu.getRouters)().then(function (res) {\n          var accessedRoutes = filterAsyncRouter(res.data);\n          accessedRoutes.push({\n            path: '*',\n            redirect: '/404',\n            hidden: true\n          });\n          commit('SET_ROUTES', accessedRoutes);\n          resolve(accessedRoutes);\n        });\n      });\n    }\n  }\n}; // 遍历后台传来的路由字符串，转换为组件对象\n\nfunction filterAsyncRouter(asyncRouterMap) {\n  return asyncRouterMap.filter(function (route) {\n    if (route.component) {\n      // Layout组件特殊处理\n      if (route.component === 'Layout') {\n        route.component = _index.default;\n      } else {\n        route.component = loadView(route.component);\n      }\n    }\n\n    if (route.children != null && route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children);\n    }\n\n    return true;\n  });\n}\n\nvar loadView = function loadView(view) {\n  // 路由懒加载\n  return function (resolve) {\n    return require([\"@/views/\".concat(view)], resolve);\n  };\n};\n\nexports.loadView = loadView;\nvar _default = permission;\nexports.default = _default;",{"version":3,"sources":["/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/store/modules/permission.js"],"names":["permission","state","routes","addRoutes","mutations","SET_ROUTES","constantRoutes","concat","actions","GenerateRoutes","commit","Promise","resolve","then","res","accessedRoutes","filterAsyncRouter","data","push","path","redirect","hidden","asyncRouterMap","filter","route","component","Layout","loadView","children","length","view","require"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,SAAS,EAAE;AAFN,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,oBAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC7BD,MAAAA,KAAK,CAACE,SAAN,GAAkBD,MAAlB;AACAD,MAAAA,KAAK,CAACC,MAAN,GAAeI,uBAAeC,MAAf,CAAsBL,MAAtB,CAAf;AACD;AAJQ,GALM;AAWjBM,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,cAFO,gCAEoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACzB,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B;AACA,gCAAaC,IAAb,CAAkB,UAAAC,GAAG,EAAI;AACvB,cAAMC,cAAc,GAAGC,iBAAiB,CAACF,GAAG,CAACG,IAAL,CAAxC;AACAF,UAAAA,cAAc,CAACG,IAAf,CAAoB;AAAEC,YAAAA,IAAI,EAAE,GAAR;AAAaC,YAAAA,QAAQ,EAAE,MAAvB;AAA+BC,YAAAA,MAAM,EAAE;AAAvC,WAApB;AACAX,UAAAA,MAAM,CAAC,YAAD,EAAeK,cAAf,CAAN;AACAH,UAAAA,OAAO,CAACG,cAAD,CAAP;AACD,SALD;AAMD,OARM,CAAP;AASD;AAZM;AAXQ,CAAnB,C,CA2BA;;AACA,SAASC,iBAAT,CAA2BM,cAA3B,EAA2C;AACzC,SAAOA,cAAc,CAACC,MAAf,CAAsB,UAAAC,KAAK,EAAI;AACpC,QAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB;AACA,UAAID,KAAK,CAACC,SAAN,KAAoB,QAAxB,EAAkC;AAChCD,QAAAA,KAAK,CAACC,SAAN,GAAkBC,cAAlB;AACD,OAFD,MAEO;AACLF,QAAAA,KAAK,CAACC,SAAN,GAAkBE,QAAQ,CAACH,KAAK,CAACC,SAAP,CAA1B;AACD;AACF;;AACD,QAAID,KAAK,CAACI,QAAN,IAAkB,IAAlB,IAA0BJ,KAAK,CAACI,QAAhC,IAA4CJ,KAAK,CAACI,QAAN,CAAeC,MAA/D,EAAuE;AACrEL,MAAAA,KAAK,CAACI,QAAN,GAAiBZ,iBAAiB,CAACQ,KAAK,CAACI,QAAP,CAAlC;AACD;;AACD,WAAO,IAAP;AACD,GAbM,CAAP;AAcD;;AAEM,IAAMD,QAAQ,GAAG,SAAXA,QAAW,CAACG,IAAD,EAAU;AAAE;AAClC,SAAO,UAAClB,OAAD;AAAA,WAAcmB,OAAO,CAAC,mBAAYD,IAAZ,EAAD,EAAsBlB,OAAtB,CAArB;AAAA,GAAP;AACD,CAFM;;;eAIQZ,U","sourcesContent":["import { constantRoutes } from '@/router'\r\nimport { getRouters } from '@/api/menu'\r\nimport Layout from '@/layout/index'\r\n\r\nconst permission = {\r\n  state: {\r\n    routes: [],\r\n    addRoutes: []\r\n  },\r\n  mutations: {\r\n    SET_ROUTES: (state, routes) => {\r\n      state.addRoutes = routes\r\n      state.routes = constantRoutes.concat(routes)\r\n    }\r\n  },\r\n  actions: {\r\n    // 生成路由\r\n    GenerateRoutes({ commit }) {\r\n      return new Promise(resolve => {\r\n        // 向后端请求路由数据\r\n        getRouters().then(res => {\r\n          const accessedRoutes = filterAsyncRouter(res.data)\r\n          accessedRoutes.push({ path: '*', redirect: '/404', hidden: true })\r\n          commit('SET_ROUTES', accessedRoutes)\r\n          resolve(accessedRoutes)\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// 遍历后台传来的路由字符串，转换为组件对象\r\nfunction filterAsyncRouter(asyncRouterMap) {\r\n  return asyncRouterMap.filter(route => {\r\n    if (route.component) {\r\n      // Layout组件特殊处理\r\n      if (route.component === 'Layout') {\r\n        route.component = Layout\r\n      } else {\r\n        route.component = loadView(route.component)\r\n      }\r\n    }\r\n    if (route.children != null && route.children && route.children.length) {\r\n      route.children = filterAsyncRouter(route.children)\r\n    }\r\n    return true\r\n  })\r\n}\r\n\r\nexport const loadView = (view) => { // 路由懒加载\r\n  return (resolve) =>  require([`@/views/${view}`], resolve)\r\n}\r\n\r\nexport default permission\r\n"]}]}