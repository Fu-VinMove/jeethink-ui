{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/tool/build/index.vue?vue&type=template&id=39cfdb14&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/tool/build/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"left-board\" },\n        [\n          _c(\"div\", { staticClass: \"logo-wrapper\" }, [\n            _c(\"div\", { staticClass: \"logo\" }, [\n              _c(\"img\", { attrs: { src: _vm.logo, alt: \"logo\" } }),\n              _vm._v(\" Form Generator\\n      \")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"el-scrollbar\", { staticClass: \"left-scrollbar\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"components-list\" },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"components-title\" },\n                  [\n                    _c(\"svg-icon\", { attrs: { \"icon-class\": \"component\" } }),\n                    _vm._v(\"输入型组件\\n        \")\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"draggable\",\n                  {\n                    staticClass: \"components-draggable\",\n                    attrs: {\n                      list: _vm.inputComponents,\n                      group: {\n                        name: \"componentsGroup\",\n                        pull: \"clone\",\n                        put: false\n                      },\n                      clone: _vm.cloneComponent,\n                      draggable: \".components-item\",\n                      sort: false\n                    },\n                    on: { end: _vm.onEnd }\n                  },\n                  _vm._l(_vm.inputComponents, function(element, index) {\n                    return _c(\n                      \"div\",\n                      {\n                        key: index,\n                        staticClass: \"components-item\",\n                        on: {\n                          click: function($event) {\n                            return _vm.addComponent(element)\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"components-body\" },\n                          [\n                            _c(\"svg-icon\", {\n                              attrs: { \"icon-class\": element.tagIcon }\n                            }),\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(element.label) +\n                                \"\\n            \"\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    )\n                  }),\n                  0\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"components-title\" },\n                  [\n                    _c(\"svg-icon\", { attrs: { \"icon-class\": \"component\" } }),\n                    _vm._v(\"选择型组件\\n        \")\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"draggable\",\n                  {\n                    staticClass: \"components-draggable\",\n                    attrs: {\n                      list: _vm.selectComponents,\n                      group: {\n                        name: \"componentsGroup\",\n                        pull: \"clone\",\n                        put: false\n                      },\n                      clone: _vm.cloneComponent,\n                      draggable: \".components-item\",\n                      sort: false\n                    },\n                    on: { end: _vm.onEnd }\n                  },\n                  _vm._l(_vm.selectComponents, function(element, index) {\n                    return _c(\n                      \"div\",\n                      {\n                        key: index,\n                        staticClass: \"components-item\",\n                        on: {\n                          click: function($event) {\n                            return _vm.addComponent(element)\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"components-body\" },\n                          [\n                            _c(\"svg-icon\", {\n                              attrs: { \"icon-class\": element.tagIcon }\n                            }),\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(element.label) +\n                                \"\\n            \"\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    )\n                  }),\n                  0\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"components-title\" },\n                  [\n                    _c(\"svg-icon\", { attrs: { \"icon-class\": \"component\" } }),\n                    _vm._v(\" 布局型组件\\n        \")\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"draggable\",\n                  {\n                    staticClass: \"components-draggable\",\n                    attrs: {\n                      list: _vm.layoutComponents,\n                      group: {\n                        name: \"componentsGroup\",\n                        pull: \"clone\",\n                        put: false\n                      },\n                      clone: _vm.cloneComponent,\n                      draggable: \".components-item\",\n                      sort: false\n                    },\n                    on: { end: _vm.onEnd }\n                  },\n                  _vm._l(_vm.layoutComponents, function(element, index) {\n                    return _c(\n                      \"div\",\n                      {\n                        key: index,\n                        staticClass: \"components-item\",\n                        on: {\n                          click: function($event) {\n                            return _vm.addComponent(element)\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"components-body\" },\n                          [\n                            _c(\"svg-icon\", {\n                              attrs: { \"icon-class\": element.tagIcon }\n                            }),\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(element.label) +\n                                \"\\n            \"\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    )\n                  }),\n                  0\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"center-board\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"action-bar\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { icon: \"el-icon-download\", type: \"text\" },\n                  on: { click: _vm.download }\n                },\n                [_vm._v(\"\\n        导出vue文件\\n      \")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"copy-btn-main\",\n                  attrs: { icon: \"el-icon-document-copy\", type: \"text\" },\n                  on: { click: _vm.copy }\n                },\n                [_vm._v(\"\\n        复制代码\\n      \")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"delete-btn\",\n                  attrs: { icon: \"el-icon-delete\", type: \"text\" },\n                  on: { click: _vm.empty }\n                },\n                [_vm._v(\"\\n        清空\\n      \")]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-scrollbar\",\n            { staticClass: \"center-scrollbar\" },\n            [\n              _c(\n                \"el-row\",\n                {\n                  staticClass: \"center-board-row\",\n                  attrs: { gutter: _vm.formConf.gutter }\n                },\n                [\n                  _c(\n                    \"el-form\",\n                    {\n                      attrs: {\n                        size: _vm.formConf.size,\n                        \"label-position\": _vm.formConf.labelPosition,\n                        disabled: _vm.formConf.disabled,\n                        \"label-width\": _vm.formConf.labelWidth + \"px\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"draggable\",\n                        {\n                          staticClass: \"drawing-board\",\n                          attrs: {\n                            list: _vm.drawingList,\n                            animation: 340,\n                            group: \"componentsGroup\"\n                          }\n                        },\n                        _vm._l(_vm.drawingList, function(element, index) {\n                          return _c(\"draggable-item\", {\n                            key: element.renderKey,\n                            attrs: {\n                              \"drawing-list\": _vm.drawingList,\n                              element: element,\n                              index: index,\n                              \"active-id\": _vm.activeId,\n                              \"form-conf\": _vm.formConf\n                            },\n                            on: {\n                              activeItem: _vm.activeFormItem,\n                              copyItem: _vm.drawingItemCopy,\n                              deleteItem: _vm.drawingItemDelete\n                            }\n                          })\n                        }),\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.drawingList.length,\n                              expression: \"!drawingList.length\"\n                            }\n                          ],\n                          staticClass: \"empty-info\"\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            从左侧拖入或点选组件进行表单设计\\n          \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", {\n        attrs: {\n          \"active-data\": _vm.activeData,\n          \"form-conf\": _vm.formConf,\n          \"show-field\": !!_vm.drawingList.length\n        },\n        on: { \"tag-change\": _vm.tagChange }\n      }),\n      _vm._v(\" \"),\n      _c(\"code-type-dialog\", {\n        attrs: {\n          visible: _vm.dialogVisible,\n          title: \"选择生成类型\",\n          \"show-file-name\": _vm.showFileName\n        },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.dialogVisible = $event\n          },\n          confirm: _vm.generate\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"input\", { attrs: { id: \"copyNode\", type: \"hidden\" } })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}