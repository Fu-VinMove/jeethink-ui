{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/config/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/system/config/index.vue","mtime":1590989844000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { listConfig, getConfig, delConfig, addConfig, updateConfig, exportConfig, clearCache } from \"@/api/system/config\";\r\n\r\nexport default {\r\n  name: \"Config\",\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 参数表格数据\r\n      configList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 类型数据字典\r\n      typeOptions: [],\r\n      // 日期范围\r\n      dateRange: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        configName: undefined,\r\n        configKey: undefined,\r\n        configType: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        configName: [\r\n          { required: true, message: \"参数名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        configKey: [\r\n          { required: true, message: \"参数键名不能为空\", trigger: \"blur\" }\r\n        ],\r\n        configValue: [\r\n          { required: true, message: \"参数键值不能为空\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.getDicts(\"sys_yes_no\").then(response => {\r\n      this.typeOptions = response.data;\r\n    });\r\n  },\r\n  methods: {\r\n    /** 查询参数列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listConfig(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\r\n          this.configList = response.rows;\r\n          this.total = response.total;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n    // 参数系统内置字典翻译\r\n    typeFormat(row, column) {\r\n      return this.selectDictLabel(this.typeOptions, row.configType);\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        configId: undefined,\r\n        configName: undefined,\r\n        configKey: undefined,\r\n        configValue: undefined,\r\n        configType: \"Y\",\r\n        remark: undefined\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.dateRange = [];\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      this.open = true;\r\n      this.title = \"添加参数\";\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.configId)\r\n      this.single = selection.length!=1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const configId = row.configId || this.ids\r\n      getConfig(configId).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改参数\";\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.configId != undefined) {\r\n            updateConfig(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess(\"修改成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              }\r\n            });\r\n          } else {\r\n            addConfig(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess(\"新增成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const configIds = row.configId || this.ids;\r\n      this.$confirm('是否确认删除参数编号为\"' + configIds + '\"的数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return delConfig(configIds);\r\n        }).then(() => {\r\n          this.getList();\r\n          this.msgSuccess(\"删除成功\");\r\n        }).catch(function() {});\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      const queryParams = this.queryParams;\r\n      this.$confirm('是否确认导出所有参数数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return exportConfig(queryParams);\r\n        }).then(response => {\r\n          this.download(response.msg);\r\n        }).catch(function() {});\r\n    },\r\n    /** 清理缓存按钮操作 */\r\n    handleClearCache() {\r\n      clearCache().then(response => {\r\n        if (response.code === 200) {\r\n          this.msgSuccess(\"清理成功\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/views/system/config","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" label-width=\"68px\">\r\n      <el-form-item label=\"参数名称\" prop=\"configName\">\r\n        <el-input\r\n          v-model=\"queryParams.configName\"\r\n          placeholder=\"请输入参数名称\"\r\n          clearable\r\n          size=\"small\"\r\n          style=\"width: 240px\"\r\n          @keyup.enter.native=\"handleQuery\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"参数键名\" prop=\"configKey\">\r\n        <el-input\r\n          v-model=\"queryParams.configKey\"\r\n          placeholder=\"请输入参数键名\"\r\n          clearable\r\n          size=\"small\"\r\n          style=\"width: 240px\"\r\n          @keyup.enter.native=\"handleQuery\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"系统内置\" prop=\"configType\">\r\n        <el-select v-model=\"queryParams.configType\" placeholder=\"系统内置\" clearable size=\"small\">\r\n          <el-option\r\n            v-for=\"dict in typeOptions\"\r\n            :key=\"dict.dictValue\"\r\n            :label=\"dict.dictLabel\"\r\n            :value=\"dict.dictValue\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"创建时间\">\r\n        <el-date-picker\r\n          v-model=\"dateRange\"\r\n          size=\"small\"\r\n          style=\"width: 240px\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          type=\"daterange\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n        ></el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-plus\"\r\n          size=\"mini\"\r\n          @click=\"handleAdd\"\r\n          v-hasPermi=\"['system:config:add']\"\r\n        >新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"success\"\r\n          icon=\"el-icon-edit\"\r\n          size=\"mini\"\r\n          :disabled=\"single\"\r\n          @click=\"handleUpdate\"\r\n          v-hasPermi=\"['system:config:edit']\"\r\n        >修改</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          icon=\"el-icon-delete\"\r\n          size=\"mini\"\r\n          :disabled=\"multiple\"\r\n          @click=\"handleDelete\"\r\n          v-hasPermi=\"['system:config:remove']\"\r\n        >删除</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"warning\"\r\n          icon=\"el-icon-download\"\r\n          size=\"mini\"\r\n          @click=\"handleExport\"\r\n          v-hasPermi=\"['system:config:export']\"\r\n        >导出</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          icon=\"el-icon-refresh\"\r\n          size=\"mini\"\r\n          @click=\"handleClearCache\"\r\n          v-hasPermi=\"['system:config:remove']\"\r\n        >清理缓存</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table v-loading=\"loading\" :data=\"configList\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n      <el-table-column label=\"参数主键\" align=\"center\" prop=\"configId\" />\r\n      <el-table-column label=\"参数名称\" align=\"center\" prop=\"configName\" :show-overflow-tooltip=\"true\" />\r\n      <el-table-column label=\"参数键名\" align=\"center\" prop=\"configKey\" :show-overflow-tooltip=\"true\" />\r\n      <el-table-column label=\"参数键值\" align=\"center\" prop=\"configValue\" />\r\n      <el-table-column label=\"系统内置\" align=\"center\" prop=\"configType\" :formatter=\"typeFormat\" />\r\n      <el-table-column label=\"备注\" align=\"center\" prop=\"remark\" :show-overflow-tooltip=\"true\" />\r\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"handleUpdate(scope.row)\"\r\n            v-hasPermi=\"['system:config:edit']\"\r\n          >修改</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"handleDelete(scope.row)\"\r\n            v-hasPermi=\"['system:config:remove']\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination\r\n      v-show=\"total>0\"\r\n      :total=\"total\"\r\n      :page.sync=\"queryParams.pageNum\"\r\n      :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getList\"\r\n    />\r\n\r\n    <!-- 添加或修改参数配置对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"参数名称\" prop=\"configName\">\r\n          <el-input v-model=\"form.configName\" placeholder=\"请输入参数名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"参数键名\" prop=\"configKey\">\r\n          <el-input v-model=\"form.configKey\" placeholder=\"请输入参数键名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"参数键值\" prop=\"configValue\">\r\n          <el-input v-model=\"form.configValue\" placeholder=\"请输入参数键值\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"系统内置\" prop=\"configType\">\r\n          <el-radio-group v-model=\"form.configType\">\r\n            <el-radio\r\n              v-for=\"dict in typeOptions\"\r\n              :key=\"dict.dictValue\"\r\n              :label=\"dict.dictValue\"\r\n            >{{dict.dictLabel}}</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listConfig, getConfig, delConfig, addConfig, updateConfig, exportConfig, clearCache } from \"@/api/system/config\";\r\n\r\nexport default {\r\n  name: \"Config\",\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 参数表格数据\r\n      configList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 类型数据字典\r\n      typeOptions: [],\r\n      // 日期范围\r\n      dateRange: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        configName: undefined,\r\n        configKey: undefined,\r\n        configType: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        configName: [\r\n          { required: true, message: \"参数名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        configKey: [\r\n          { required: true, message: \"参数键名不能为空\", trigger: \"blur\" }\r\n        ],\r\n        configValue: [\r\n          { required: true, message: \"参数键值不能为空\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.getDicts(\"sys_yes_no\").then(response => {\r\n      this.typeOptions = response.data;\r\n    });\r\n  },\r\n  methods: {\r\n    /** 查询参数列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listConfig(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\r\n          this.configList = response.rows;\r\n          this.total = response.total;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n    // 参数系统内置字典翻译\r\n    typeFormat(row, column) {\r\n      return this.selectDictLabel(this.typeOptions, row.configType);\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        configId: undefined,\r\n        configName: undefined,\r\n        configKey: undefined,\r\n        configValue: undefined,\r\n        configType: \"Y\",\r\n        remark: undefined\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.dateRange = [];\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      this.open = true;\r\n      this.title = \"添加参数\";\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.configId)\r\n      this.single = selection.length!=1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const configId = row.configId || this.ids\r\n      getConfig(configId).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改参数\";\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.configId != undefined) {\r\n            updateConfig(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess(\"修改成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              }\r\n            });\r\n          } else {\r\n            addConfig(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess(\"新增成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const configIds = row.configId || this.ids;\r\n      this.$confirm('是否确认删除参数编号为\"' + configIds + '\"的数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return delConfig(configIds);\r\n        }).then(() => {\r\n          this.getList();\r\n          this.msgSuccess(\"删除成功\");\r\n        }).catch(function() {});\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      const queryParams = this.queryParams;\r\n      this.$confirm('是否确认导出所有参数数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return exportConfig(queryParams);\r\n        }).then(response => {\r\n          this.download(response.msg);\r\n        }).catch(function() {});\r\n    },\r\n    /** 清理缓存按钮操作 */\r\n    handleClearCache() {\r\n      clearCache().then(response => {\r\n        if (response.code === 200) {\r\n          this.msgSuccess(\"清理成功\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"]}]}