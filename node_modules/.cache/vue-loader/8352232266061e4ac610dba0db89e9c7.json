{"remainingRequest":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/components/marriage/claims_bak.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/src/views/components/marriage/claims_bak.vue","mtime":1606963228927},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuwenmu/Downloads/jeethink前后分离开发框架/jeethink快速开发框架（前后分离）_V2.3/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Park from './dialog/park'\nimport House from './dialog/house'\nimport Car from './dialog/car'\nimport Credit from './dialog/credit'\n\nexport default {\n  name: 'claims',\n  props:{\n    factual:{\n      type : Object,\n      required: true\n    },\n    initClaims:{\n      type : Object,\n      required: true\n    },\n    claims:{\n      type : Object,\n      default(){\n        return {}\n      }\n    }\n  },\n  data(){\n    return {\n      dialogForm : '',\n      formLabelWidth:'120px',\n      custodys: typeof this.initClaims.custodys != 'undefined' ? this.initClaims.custodys : [],\n      /*claims:{\n        /!*propertyList : typeof this.initClaims.propertyList !='undefined' ? this.initClaims.propertyList : [],*!/\n        custodys: typeof this.initClaims.custodys != 'undefined' ? this.initClaims.custodys : [],\n        /!*houses : typeof  this.initClaims.houses !='undefined' ? this.initClaims.houses : {},\n        parks : typeof this.initClaims.parks!='undefined'? this.initClaims.parks : {},\n        cars : typeof this.initClaims.cars !='undefined' ? this.initClaims.cars : {},\n        credits: typeof this.initClaims.credits != 'undefined'? this.initClaims.credits : {},*!/\n      },*/\n    }\n  },\n  /*    watch:{\n        claims:{\n          handler(newVal,oldValue){\n            this.$emit('updateClaims',newVal)\n          },\n          deep:true,\n          immediate:true\n        }\n      },*/\n  computed: {\n    hasChild() {\n      return this.factual.hasChild == 'Y'\n    },\n    isclaimCustody(){\n      if(this.factual.hasChild === 'Y'){\n        if(this.factual.childNum == 1){\n          return this.claims.claimCustody == 'Y';\n        }\n        else{\n          return  this.claims.custodys.length > 0 &&  !this.claims.custodys.includes('neither')\n        }\n      }\n    }\n  },\n  methods:{\n    exclusiveChoice(value) {\n      if (value.length > 1) {\n        const index = value.indexOf('neither');\n        if (index == 0) {\n          value.splice(0, 1);\n        }\n        if (index > 0) {\n          value.splice(0, value.length - 1);\n        }\n      }\n    },/*\n    propertyDetail(value){\n      if(value == true ){\n        //获取数据里最后一个值\n        let propertyList = this.claims.propertyList;\n        let currentValue = propertyList[propertyList.length-1];\n        switch (currentValue) {\n          case 'house' : this.dialogForm='house';break;\n          case 'park' : this.dialogForm='park';break;\n          case 'car' : this.dialogForm='car';break;\n          case 'credit' : this.dialogForm='credit';break;\n        }\n      }\n    },\n    closeDialog(data){\n      this.dialogForm = 'close';\n      if(data == false){\n        this.claims.propertyList.pop();\n      }\n    },\n    addClaims(data,type){\n      switch (type) {\n        case 'house':this.houses=data;\n        case 'park':this.parks =data;\n      }\n      //console.log(this);\n    },*/\n  },\n  /*    components:{\n        Park,House,Car,Credit,\n      }*/\n}\n",null]}